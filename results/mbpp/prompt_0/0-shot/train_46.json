{
    "query": "Question:\nWrite a function to split a string at uppercase letters.\nTask:\nWrite a python function to solve the above question. No additional comments and docstrings are needed.\nAdditional info:\nThink along the lines of the variables and data structures that need to be used. Also think about the way to access the elements in the data structures.\nAnswer:",
    "success": 0,
    "0": {
        "status": 2,
        "codex_out": "\n'''\ndef split_uppercase(string):\n    \"\"\"Split a string at uppercase letters.\n\n    >>> split_uppercase('HelloWorld')\n    'Hello World'\n    \"\"\"\n\n    # Write your code here.\n\n ",
        "clean_code": "'''\ndef split_uppercase(string):\n    \"\"\"Split a string at uppercase letters.\n\n    >>> split_uppercase('HelloWorld')\n    'Hello World'\n    \"\"\"\n\n    # Write your code here."
    },
    "1": {
        "status": 2,
        "codex_out": "\n<code>def split_at_uppercase(s):\n    l=[]\n    k=''\n    for i in range(len(s)):\n        if s[i].isupper():\n            l.append(k)\n            k=''+s[i]\n\n        else:\n\n            k=k+s[i]\n\n    l.append(k)\n\n    return [x for x in l if x!='']  #return list of words with uppercase letters splitted and empty strings removed.\n\n  print split_at_uppercase(\"ThisIsAString\")   #['This', 'Is', 'A', 'String']\n</code>\n\n",
        "clean_code": "<code>def split_at_uppercase(s):\n    l=[]\n    k=''\n    for i in range(len(s)):\n        if s[i].isupper():\n            l.append(k)\n            k=''+s[i]\n\n        else:\n\n            k=k+s[i]\n\n    l.append(k)\n\n    return [x for x in l if x!='']  #return list of words with uppercase letters splitted and empty strings removed.\n\n  print split_at_uppercase(\"ThisIsAString\")   #['This', 'Is', 'A', 'String']\n</code>"
    },
    "2": {
        "status": 2,
        "codex_out": "\n<code>def split_at_uppercase(string):\n    return re.findall('[A-Z][^A-Z]*', string)\n</code>\n",
        "clean_code": "<code>def split_at_uppercase(string):\n    return re.findall('[A-Z][^A-Z]*', string)\n</code>"
    },
    "3": {
        "status": 2,
        "codex_out": "\n\"\"\"\nimport re\n\n\ndef split_string(word):\n    return re.findall('[A-Z][^A-Z]*', word)\n\n\nprint(split_string(\"ThisIsATest\"))",
        "clean_code": "\"\"\"\nimport re\n\n\ndef split_string(word):\n    return re.findall('[A-Z][^A-Z]*', word)\n\n\nprint(split_string(\"ThisIsATest\"))"
    },
    "4": {
        "status": 2,
        "codex_out": "\n\"\"\"\ndef split_at_uppercase(strng):\n    return re.findall('[A-Z][^A-Z]*', strng)",
        "clean_code": "\"\"\"\ndef split_at_uppercase(strng):\n    return re.findall('[A-Z][^A-Z]*', strng)"
    }
}